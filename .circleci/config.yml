version: 2.1

parameters:
  cli-version:
    type: string
    default: "0.1.30549"
  staging-hostname:
    type: string
    default: "https://staging.fieldeng-sphereci.com"

commands:            
  staging-setup:
    parameters:
      circle-hostname:
        type: string
    steps:
      - run: 
          name: Setup CircleCI CLI and import orbs
          command: |
              echo "$CIRCLE_HOSTNAME"
              circleci setup --host "$HOST" --token "$STAGING_API_TOKEN" --skip-update-check --no-prompt
              #circleci info org --host "$HOST" --token "$STAGING_API_TOKEN"
              
              mapfile -t orbs < orbs.txt
              
              for orb_namespace_name in "${orbs[@]}"; do
                namespace=$(echo "$orb_namespace_name" | cut -d/ -f1)
                orb_name=$(echo "$orb_namespace_name" | cut -d/ -f2)
                repo_name="${orb_name}-orb"
              
                github_repo="https://api.github.com/repos/${namespace^}-Public/${repo_name}/tags"
              
                echo "🔍 Fetching tags for $orb_namespace_name from $github_repo ..."
              
                tags=$(curl -s "$github_repo" |
                  jq -r '.[].name' |
                  grep -E '^v[0-9]+\.[0-9]+\.[0-9]+$' || true)
              
                if [[ -z "$tags" ]]; then
                  echo "⚠️  No valid semver tags found for $orb_namespace_name. Skipping."
                  continue
                fi
              
                for tag in $tags; do
                  version="${tag#v}"
                  orb_version="${orb_namespace_name}@${version}"
              
                  echo "📦 Importing $orb_version ..."
                  #circleci admin import-orb "$orb_version" --host "$HOST" --token "$STAGING_API_TOKEN" --no-prompt
                done
              done
    
jobs:
  import-orbs:
    docker:
      - image: circleci/circleci-cli:<< pipeline.parameters.cli-version >>
    environment:
      CIRCLE_HOSTNAME: << pipeline.parameters.staging-hostname >>
    resource_class: small
    parameters:
      circle-hostname:
        type: string
    steps:
      - checkout
      - staging-setup:
          circle-hostname: << pipeline.parameters.staging-hostname >>


workflows:
  stage:
    jobs:
      - import-orbs:
           circle-hostname: << pipeline.parameters.staging-hostname >>
           name: "staging-env-import"
           filters: pipeline.git.branch == "import-all-versions"
